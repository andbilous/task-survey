{"version":3,"sources":["redux/survey/types.js","redux/survey/reducer.js","redux/rootReducer.js","redux/store.js","components/Header.jsx","components/Footer.jsx","pages/EmploymentStatus.jsx","redux/survey/actions.js","pages/FillingStatus.jsx","pages/Proprietorships.jsx","pages/Score.jsx","App.js","serviceWorker.js","index.js"],"names":["types","SET_EMPLOYMENT_STATUS","SET_PROPRIETORSHIPS_MULTIPLIER","SET_FILLING_STATUS","DISPLAY_RESULT","initialValues","count","employmentStatus","progress","surveyReducer","state","action","type","multiplier","rootReducer","combineReducers","middleware","thunk","logger","store","createStore","applyMiddleware","styles","general","position","left","right","top","bottom","height","backgroundColor","HeaderContainer","connect","dispatch","style","width","minWidth","padding","display","paddingLeft","arrow","marginLeft","transform","backBtn","border","color","Footer","disable","navigateNextPage","navigatePrevPage","onClick","disabled","parent","marginTop","flexDirection","alignItems","textAlign","item","paddingTop","input","marginRight","EmploymentStatusPageContainer","setEmploymentStatus","value","history","useHistory","useState","disableFooter","setDisableFooter","setValue","handleChange","console","log","className","paddingRight","borderRadius","boxShadow","push","form","FillingStatusPageContainer","setFillingStatus","values","length","setValues","handleChangeValues","includes","filter","name","ProprietorshipPageContainer","setProprietorshipsCount","onChange","e","number","parseInt","target","ScorePageContainer","displayResult","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cf0f63c1.chunk.js","sourcesContent":["const types = {\n  SET_EMPLOYMENT_STATUS:'SET_EMPLOYMENT_STATUS',\n  SET_PROPRIETORSHIPS_MULTIPLIER: 'SET_PROPRIETORSHIPS_MULTIPLIER',\n  SET_FILLING_STATUS: 'SET_FILLING_STATUS',\n  DISPLAY_RESULT: 'DISPLAY_RESULT'\n}\n\nexport default types;","import types from './types'\n\nconst initialValues = {\n  count: 0,\n  employmentStatus:'',\n  progress: 0\n}\n\nconst surveyReducer = (state = initialValues, action) => {\n  switch (action.type) {\n    case types.SET_EMPLOYMENT_STATUS:\n      return {\n        ...state,\n        count: state.count + action.count,\n        employmentStatus: action.employmentStatus,\n        progress: 30\n      }\n      case types.SET_PROPRIETORSHIPS_MULTIPLIER:\n        return {\n          ...state,\n          count: state.count * action.multiplier,\n          progress: 50\n        }\n        case types.SET_FILLING_STATUS:\n        return {\n          ...state,\n          count: state.count + action.count,\n          progress: 70\n        }\n        case types.DISPLAY_RESULT:\n        return {\n          ...state,\n          progress: 100\n        }\n\n    default:\n      return state\n  }\n}\n\nexport default surveyReducer;\n","import { combineReducers } from 'redux'\nimport surveyReducer from './survey/reducer'\n\nexport const rootReducer = combineReducers({\n  surveyReducer\n})\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './rootReducer';\n\nconst middleware = [thunk, logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Header = ({ progress }) => {\n  return (\n    <>\n      <div style={styles.general} />\n      <div\n        style={{\n          width: `${progress}%`,\n          height: \"75px\",\n          backgroundColor: \"#61AD15\",\n        }}\n      ></div>\n    </>\n  );\n};\n\nconst styles = {\n  general: {\n    position: \"absolute\",\n    left: \"0%\",\n    right: \"0%\",\n    top: \"0%\",\n    bottom: \"0%\",\n    height: \"72px\",\n    backgroundColor: \"#fff\",\n  },\n};\n\nconst HeaderContainer = connect(\n  (state) => ({\n    progress: state.surveyReducer.progress,\n  }),\n  (dispatch) => ({})\n)(Header);\n\nexport { HeaderContainer as Header };\n","import React from \"react\";\n\nconst Footer = ({ disable, navigateNextPage, navigatePrevPage }) => {\n  if (navigatePrevPage && navigateNextPage) {\n    return (\n      <div style={styles.general}>\n        <button\n          style={styles.backBtn}\n          onClick={() => {\n            navigatePrevPage();\n          }}\n        >\n          Back\n        </button>\n        <button\n        style={{position: 'absolute',right: '120px'}}\n        disabled={disable}\n        onClick={() => {\n          navigateNextPage();\n        }}\n      >\n        <span>Next step</span>\n        <span style={styles.arrow}>&#8594;</span>\n      </button>\n      </div>\n    );\n  }\n  if (navigatePrevPage && !navigateNextPage) {\n    return (\n      <div style={styles.general}>\n      <button\n        disabled={disable}\n        onClick={() => {\n          navigatePrevPage();\n        }}\n      >\n        Prev step\n      </button>\n      </div>\n    );\n  }\n  if (!navigatePrevPage && navigateNextPage) {\n    return (\n      <div style={styles.general}>\n      <button\n        style={{position: 'absolute',right: '120px'}}\n        disabled={disable}\n        onClick={() => {\n          navigateNextPage();\n        }}\n      >\n        <span>Next step</span>\n        <span style={styles.arrow}>&#8594;</span>\n      </button>\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  general: {\n    minWidth: '550px',\n    position: \"absolute\",\n    bottom: \"0\",\n    width: \"100%\",\n    height: \"72px\",\n    backgroundColor: \"#fff\",\n    padding: '10px 10px',\n    display: 'flex',\n    paddingLeft: '160px'\n  },\n  arrow: {\n    marginLeft: '25px',\n    transform: \"matrix(1, 0, 0, -1, 0, 0)\",\n  },\n  backBtn:{\n    width: '84px',\n    height: '48px',\n    backgroundColor: \"#fff\",\n    border: '1px solid grey',\n    color: '#5D606B'\n  }\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Footer from \"../components/Footer\";\nimport { setEmploymentStatus } from \"../redux/survey/actions\";\n\nconst EmploymentStatusPage = ({ setEmploymentStatus }) => {\n  const history = useHistory();\n  const [disableFooter, setDisableFooter] = useState(true);\n  const [value, setValue] = useState(\"\");\n\n  const navigateNextPage = () => {\n    if (value === \"Employed\" || value === \"Unemployed\") {\n      history.push(\"/filling-status\");\n    } else {\n      history.push(\"/proprietorship\");\n    }\n  };\n\n  const handleChange = (value) => {\n    console.log(value);\n    setDisableFooter(false);\n    setEmploymentStatus(value);\n    setValue(value);\n  };\n  return (\n    <div style={{ marginTop: \"7rem\" }}>\n      \n      <form>\n        <div\n          style={styles.parent}\n          className=\"radio\"\n        >\n          <h2>What is your employment status?</h2>\n          <label className=\"list-item\" style={{paddingRight: '350px',borderRadius: '4px 4px 0px 0px'}}>\n            <input\n              style={styles.input}\n              onClick={() => handleChange(\"Employed\")}\n              type=\"radio\"\n              value=\"Employed\"\n            />\n            Employed\n          </label>\n          <label className=\"list-item\" style={{\n            paddingRight: '334px'\n            }}>\n            <input\n              style={styles.input}\n              onClick={() => handleChange(\"Unemployed\")}\n              type=\"radio\"\n              value=\"Unemployed\"\n            />\n            Unemployed\n          </label>\n          <label className=\"list-item\" style={{paddingRight: '324px',  boxShadow: 'inset 0px -1px 0px #DEE0E8'}}>\n            <input\n              style={styles.input}\n              onClick={() => handleChange(\"SelfEmployed\")}\n              type=\"radio\"\n              value=\"SelfEmployed\"\n            />\n            Self-employed\n          </label>\n          </div>\n      </form>\n      <Footer disable={disableFooter} navigateNextPage={navigateNextPage} />\n    </div>\n  );\n};\n\nconst styles = {\n  parent: {\n    marginTop: \"2rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  item: {\n    width: \"544px\",\n    height: \"66px\",\n    border: \"1px solid black\",\n    paddingTop: '21px',\n  },\n  input :{\n    marginRight: '40px'\n  }\n};\n\nconst EmploymentStatusPageContainer = connect(\n  (state) => ({}),\n  (dispatch) => ({\n    setEmploymentStatus: (value) => dispatch(setEmploymentStatus(value)),\n  })\n)(EmploymentStatusPage);\n\nexport { EmploymentStatusPageContainer as EmploymentStatusPage };\n","import types from './types';\n\nexport const setEmploymentStatus = (value) => {\n    if(value === 'Employed'){\n      return {\n        type: types.SET_EMPLOYMENT_STATUS,\n        employmentStatus: value,\n        count: 10,\n\n      }\n    }\n      if(value === 'Unemployed'){\n        return {\n          type: types.SET_EMPLOYMENT_STATUS,\n          employmentStatus: value,\n          count: 20\n        }\n      }\n        if(value === 'SelfEmployed'){\n          return {\n            type: types.SET_EMPLOYMENT_STATUS,\n            employmentStatus: value,\n            count: 30\n          }\n    }\n};\n\nexport const setProprietorshipsCount = (value) => ({\n    type: types.SET_PROPRIETORSHIPS_MULTIPLIER,\n    multiplier: value\n})\n\nexport const setFillingStatus = (values) =>{\n  if(!values.length){\n    return {\n      type: types.SET_FILLING_STATUS,\n      count: 0\n    }\n}\n  if(values.length===1){\n    return {\n      type: types.SET_FILLING_STATUS,\n      count: 10\n    }\n}\n  return {\n    type: types.SET_FILLING_STATUS,\n    count: (values.length)*5\n  }\n}\n\nexport const displayResult = () =>({\n  type: types.DISPLAY_RESULT\n})\n\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setFillingStatus } from \"../redux/survey/actions\";\nimport Footer from \"../components/Footer\";\n\nconst FillingStatusPage = ({ setFillingStatus, employmentStatus }) => {\n  const history = useHistory();\n  const [values, setValues] = useState([]);\n\n  const handleChangeValues = (value) => {\n    if (values.includes(value)) {\n      setValues(values.filter((item) => item !== value));\n    } else {\n      setValues([...values, value]);\n    }\n  };\n\n  const navigateNextPage = () => {\n    setFillingStatus(values);\n    history.push(\"/score\");\n  };\n\n  const navigatePrevPage = () => {\n    if (employmentStatus === \"Employed\" || employmentStatus === \"Unemployed\") {\n      history.push(\"/employment-status\");\n    } else {\n      history.push(\"/proprietorship\");\n    }\n  };\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: \"#fff\",\n          marginTop: \"3rem\",\n          marginLeft: \"calc( 30% - 25px )\",\n          marginRight: \"calc( 30% - 25px )\",\n        }}\n      >\n        <h2 style={{ marginLeft: \"38px\" }}>\n          What best describes your filling status?\n        </h2>\n        <form style={styles.form}>\n          <label style={{ paddingRight: \"72%\" }} className=\"inputBox\">\n            <input\n              style={styles.input}\n              type=\"checkbox\"\n              name=\"single\"\n              onClick={() => {\n                handleChangeValues(\"single\");\n              }}\n            ></input>\n            Single\n          </label>\n          <label style={{ paddingRight: \"58.5%\" }} className=\"inputBox\">\n            <input\n              style={styles.input}\n              type=\"checkbox\"\n              name=\"married-jointly\"\n              onClick={() => {\n                handleChangeValues(\"married-jointly\");\n              }}\n            ></input>\n            Married filling jointly\n          </label>\n\n          <label style={{ paddingRight: \"60.5%\" }} className=\"inputBox\">\n            <input\n              style={styles.input}\n              type=\"checkbox\"\n              name=\"head-household\"\n              onClick={() => {\n                handleChangeValues(\"head-household\");\n              }}\n            ></input>\n            Head of Household\n          </label>\n          <label style={{ paddingRight: \"38.5%\" }} className=\"inputBox\">\n            <input\n              style={styles.input}\n              type=\"checkbox\"\n              name=\"widow\"\n              onClick={() => {\n                handleChangeValues(\"widow\");\n              }}\n            ></input>\n            Qualifying widow(-er) with dependent child\n          </label>\n        </form>\n      </div>\n      <Footer\n        navigateNextPage={navigateNextPage}\n        navigatePrevPage={navigatePrevPage}\n      />\n    </>\n  );\n};\n\nconst styles = {\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  input: {\n    marginRight: \"20px\",\n    border: \"1px solid black\",\n  },\n};\n\nconst FillingStatusPageContainer = connect(\n  (state) => ({\n    employmentStatus: state.surveyReducer.employmentStatus,\n  }),\n  (dispatch) => ({\n    setFillingStatus: (value) => dispatch(setFillingStatus(value)),\n  })\n)(FillingStatusPage);\n\nexport { FillingStatusPageContainer as FillingStatusPage };\n","import React,{useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {setProprietorshipsCount} from '../redux/survey/actions';\nimport Footer from '../components/Footer';\n\n\nconst ProprietorshipPage = ({setProprietorshipsCount}) => {\n  const history = useHistory();\n  const [disableFooter,setDisableFooter] = useState(true);\n\n  const handleChange = (value) =>{\n    let number = parseInt(value);\n    if(number>0){\n      setDisableFooter(false)\n      setProprietorshipsCount(number);\n    }\n\n  }\n  const navigateNextPage = () => {\n    history.push(\"/filling-status\");\n  }\n  const navigatePrevPage = () => {\n    history.push(\"/employment-status\");\n  }\n  return (\n    <div style={{ backgroundColor: \"#fff\", marginTop: \"15rem\" }}>\n     <h1>How many separate sole proprietorships do you operate?</h1>\n     <p>Please enter a quantity</p>\n     <input type='number' \n     onChange={(e)=>{handleChange(e.target.value)}}/>\n     <Footer\n     disable={disableFooter}\n     navigateNextPage={navigateNextPage}\n     navigatePrevPage={navigatePrevPage}\n     />\n    </div>\n  )\n}\nconst ProprietorshipPageContainer = connect(\n  (state) => ({\n  }), (dispatch) => ({\n    setProprietorshipsCount: (value) => dispatch(setProprietorshipsCount(value))\n  })\n)(ProprietorshipPage)\n\nexport { ProprietorshipPageContainer as ProprietorshipsPage }\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { displayResult } from \"../redux/survey/actions\";\nimport Footer from \"../components/Footer\";\n\nconst ScorePage = ({ count, displayResult }) => {\n  const history = useHistory();\n\n  const navigatePrevPage = () => {\n    history.push(\"/proprietorship\");\n  };\n  if(count){\n    displayResult();\n  }\n\n  return (\n    <div style={{ backgroundColor: \"#fff\", marginTop: \"15rem\" }}>\n      <h1>Ready to see your score?</h1>\n      <div>{count}</div>\n      <Footer navigatePrevPage={navigatePrevPage} />\n    </div>\n  );\n};\n\nconst ScorePageContainer = connect(\n  (state) => ({\n    count: state.surveyReducer.count,\n  }),\n  (dispatch) => ({\n    displayResult: () => dispatch(displayResult()),\n  })\n)(ScorePage);\n\nexport { ScorePageContainer as ScorePage };\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport {Header} from './components/Header';\nimport {EmploymentStatusPage} from './pages/EmploymentStatus';\nimport {FillingStatusPage} from './pages/FillingStatus';\nimport {ProprietorshipsPage} from './pages/Proprietorships';\nimport {ScorePage} from './pages/Score';\n\n\nfunction App() {\n  return (\n    <Router>\n    <Provider store={store}>\n    <Switch>\n    <div className=\"App\">\n      <Header/>\n      <Route path=\"/employment-status\">\n            <EmploymentStatusPage />\n          </Route>\n          <Route path=\"/filling-status\">\n            <FillingStatusPage />\n          </Route>\n          <Route path=\"/proprietorship\">\n            <ProprietorshipsPage />\n          </Route>\n          <Route path=\"/score\">\n            <ScorePage />\n          </Route>\n    </div>\n    </Switch>\n    </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}